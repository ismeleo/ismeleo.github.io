{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_interceptors/custom-http.interceptor.ts","webpack:///src/app/_interceptors/index.ts","webpack:///src/app/_layout/public/index.ts","webpack:///src/app/_layout/public/public.component.ts","webpack:///src/app/_layout/public/public.component.html","webpack:///src/app/_layout/public/public.routes.ts","webpack:///src/app/_layout/secure/index.ts","webpack:///src/app/_layout/secure/secure.component.ts","webpack:///src/app/_layout/secure/secure.component.html","webpack:///src/app/_layout/secure/secure.routes.ts","webpack:///src/app/_model/index.ts","webpack:///src/app/_model/user.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/auth.guard.ts","webpack:///src/app/constants.ts","webpack:///src/app/public/login/index.ts","webpack:///src/app/public/login/login.component.ts","webpack:///src/app/public/login/login.component.html","webpack:///src/app/secure/asset-list/asset-list.component.ts","webpack:///src/app/secure/asset-list/asset-list.component.html","webpack:///src/app/secure/asset-list/index.ts","webpack:///src/app/secure/location-list/index.ts","webpack:///src/app/secure/location-list/location-list.component.ts","webpack:///src/app/secure/location-list/location-list.component.html","webpack:///src/app/secure/location/index.ts","webpack:///src/app/secure/location/location.component.ts","webpack:///src/app/secure/location/location.component.html","webpack:///src/app/secure/scanner/index.ts","webpack:///src/app/secure/scanner/scanner.component.ts","webpack:///src/app/secure/scanner/scanner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomHttpInterceptor","authenticationService","next","token","getToken","clone","setHeaders","handle","pipe","handleError","bind","error","status","PublicComponent","selector","templateUrl","styleUrls","PUBLIC_ROUTES","path","redirectTo","pathMatch","component","SecureComponent","SECURE_ROUTES","User","opts","Object","assign","AuthenticationService","http","router","userService","account","password","user","setCurrentUser","clearStorageData","navigate","localStorage","setItem","STORAGE_ITEM__TOKEN","STORAGE_ITEM__TOKEN_CREATE_TIME","Date","getMilliseconds","toString","getItem","tokenCreateTime","undefined","Number","removeItem","STORAGE_ITEM__CURRENT_USER","STORAGE_ITEM__IDLING","STORAGE_ITEM__IDLING_EXPIRY","STORAGE_ITEM__LAST_TIME","providedIn","UserService","JSON","stringify","strCurrentUser","parse","routes","canActivate","data","title","children","AppRoutingModule","forRoot","imports","AppComponent","_dialog","AppModule","library","addIcons","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","getCurrentUser","Constants","TIMEOUT","EXTERNAL_AUTH_URL","API_BASE_HREF","API_ACCOUNT_LOGIN","LANDING_PAGE","LoginComponent","console","log","login","AssetListComponent","LocationListComponent","open","afterClosed","subscribe","x","barcodeValue","startScan","LocationComponent","PREVIOUS_SELECTED_CAMERA_LABEL","ScannerComponent","_dialogRef","delayShowCheckingMessage","showScanner","isFirstTime","tryHarder","currentDevice","formatsEnabled","CODE_39","CODE_93","CODE_128","EAN_13","EAN_8","PDF_417","DATA_MATRIX","QR_CODE","setTimeout","value","close","has","hasPermission","devices","availableDevices","hasDevices","Boolean","length","scanner","device","previousSelectedCameraLabel","currentSelectedCameraLabel","label","find","stopScan","onDeviceChange","onAutostarted","scanSuccess","onHasPermission","onCamerasFound","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../_services';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable()\r\nexport class CustomHttpInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        const token: string = this.authenticationService.getToken() || '';\r\n        req = req.clone({\r\n            setHeaders: {\r\n                'token': token\r\n            }\r\n        });\r\n        return next.handle(req).pipe(\r\n            catchError(this.handleError.bind(this))\r\n        );\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse): Observable<any> {\r\n        switch (error.status) {\r\n            /*\r\n            case 400:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_400);\r\n                break;\r\n            case 401:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_401);\r\n                break;\r\n            case 403:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_403);\r\n                break;\r\n            case 404:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_404);\r\n                break;\r\n            case 500:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_500);\r\n                break;\r\n            case 0:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_0);\r\n                break;\r\n            default:\r\n                this.messageService.showNotice(Constants.TITLE_ERROR, Constants.ERROE_000);\r\n            */\r\n        }\r\n        // return an observable with a user-facing error message\r\n        return throwError(\r\n            error\r\n        );\r\n    }\r\n}","export * from './custom-http.interceptor';","export * from './public.component';\r\nexport * from './public.routes';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.sass']\n})\nexport class PublicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { LoginComponent } from './../../public/login';\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const PUBLIC_ROUTES: Routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }\r\n];","export * from './secure.component';\r\nexport * from './secure.routes';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-secure',\n  templateUrl: './secure.component.html',\n  styleUrls: ['./secure.component.sass']\n})\nexport class SecureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { AssetListComponent } from '../../secure/asset-list';\r\nimport { LocationListComponent } from '../../secure/location-list';\r\nimport { LocationComponent } from '../../secure/location';\r\nimport { ScannerComponent } from '../../secure/scanner';\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const SECURE_ROUTES: Routes = [\r\n    { path: 'asset-list', component: AssetListComponent },\r\n    { path: 'location-list', component: LocationListComponent },\r\n    { path: 'location', component: LocationComponent },\r\n    { path: 'scanner', component: ScannerComponent }\r\n];","export * from './user';","export class User {\r\n    account: string\r\n    password: string\r\n\r\n    constructor(opts?: Partial<User>) {\r\n        if (opts) {\r\n            Object.assign(this, opts)\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Constants } from '../constants';\r\nimport { map, timeout } from 'rxjs/operators';\r\nimport { User } from '../_model';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n        private userService: UserService) { }\r\n\r\n    login(account: string, password: string) {\r\n        /*\r\n        return this.http.post<any>(Constants.API_ACCOUNT_LOGIN, { \"Account\": account, \"Password\": password })\r\n          .pipe(timeout(Constants.TIMEOUT), map(res => {\r\n            if (res.Status !== 'success') {\r\n                //this.messageService.showNotice(res.Status,res.Message);\r\n                return;\r\n            }\r\n            let user = new User(),\r\n                pingTime = new Date().getTime();\r\n\r\n            user.account = account;\r\n            this.userService.setCurrentUser(user);\r\n\r\n            localStorage.setItem(Constants.STORAGE_ITEM__LAST_TIME, pingTime.toString())\r\n            return user;\r\n        }));\r\n        */\r\n        let user = new User();\r\n        user.account = account;\r\n        this.userService.setCurrentUser(user);\r\n    }\r\n\r\n    logout(): void {\r\n        this.clearStorageData();\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    saveToken(token: string): void {\r\n        localStorage.setItem(Constants.STORAGE_ITEM__TOKEN, token);\r\n        localStorage.setItem(Constants.STORAGE_ITEM__TOKEN_CREATE_TIME, new Date().getMilliseconds().toString());\r\n    }\r\n\r\n    getToken(): string {\r\n        return localStorage.getItem(Constants.STORAGE_ITEM__TOKEN);\r\n    }\r\n\r\n    getTokenCreateTime(): number {\r\n        let tokenCreateTime: string = localStorage.getItem(Constants.STORAGE_ITEM__TOKEN_CREATE_TIME);\r\n        if (tokenCreateTime === null || tokenCreateTime === undefined || tokenCreateTime === '') {\r\n            return 0;\r\n        }\r\n\r\n        return Number(tokenCreateTime);\r\n    }\r\n\r\n    clearStorageData(): void {\r\n        localStorage.removeItem(Constants.STORAGE_ITEM__CURRENT_USER);\r\n        localStorage.removeItem(Constants.STORAGE_ITEM__IDLING);\r\n        localStorage.removeItem(Constants.STORAGE_ITEM__IDLING_EXPIRY);\r\n        localStorage.removeItem(Constants.STORAGE_ITEM__LAST_TIME);\r\n        localStorage.removeItem(Constants.STORAGE_ITEM__TOKEN);\r\n    }\r\n}","export * from './user.service';\r\nexport * from './authentication.service';","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { User } from '../_model';\r\nimport { plainToClass } from \"class-transformer\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, timeout } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    //message\r\n    constructor(private http: HttpClient) { }\r\n\r\n    setCurrentUser(user: User): void {\r\n        localStorage.setItem(Constants.STORAGE_ITEM__CURRENT_USER, JSON.stringify(user));\r\n    }\r\n\r\n    getCurrentUser(): User {\r\n        let strCurrentUser: string = localStorage.getItem(Constants.STORAGE_ITEM__CURRENT_USER);\r\n        if (strCurrentUser) {\r\n            try {\r\n                return plainToClass(User, JSON.parse(strCurrentUser) as Object);\r\n            } catch {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PublicComponent, PUBLIC_ROUTES } from './_layout/public';\nimport { SecureComponent, SECURE_ROUTES } from './_layout/secure';\nimport { AuthGuard } from './common/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PublicComponent,\n    canActivate: [],\n    data: { title: 'Public Views' },\n    children: PUBLIC_ROUTES\n  },\n  {\n    path: '',\n    component: SecureComponent,\n    canActivate: [AuthGuard],\n    data: { title: 'Secure Views' },\n    children: SECURE_ROUTES\n  },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  constructor(private readonly _dialog: MatDialog) { }\n\n  title = 'Asset Tracking System';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CustomHttpInterceptor } from './_interceptors';\n\nimport { AuthGuard } from './common/auth.guard';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './public/login';\nimport { LocationComponent } from './secure/location';\nimport { LocationListComponent } from './secure/location-list';\nimport { AssetListComponent } from './secure/asset-list';\nimport { SecureComponent } from './_layout/secure/secure.component';\nimport { PublicComponent } from './_layout/public/public.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MenuModule } from 'primeng/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faBarcode } from '@fortawesome/free-solid-svg-icons';\n\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { ScannerComponent } from './secure/scanner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LocationComponent,\n    LocationListComponent,\n    AssetListComponent,\n    SecureComponent,\n    PublicComponent,\n    ScannerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ZXingScannerModule,\n\n    FormsModule,\n    InputTextModule,\n    PasswordModule,\n    ButtonModule,\n    ToastModule,\n    DropdownModule,\n    MenuModule,\n\n    MatDialogModule,\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CustomHttpInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faBarcode);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { UserService } from '../_services';\r\n\r\nimport { User } from \"../_model\"\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private userService: UserService) { }\r\n\r\n    canActivate() {\r\n        let user: User = this.userService.getCurrentUser();\r\n\r\n        if (user === null ||\r\n            user.account === null ||\r\n            user.account === undefined ||\r\n            user.account === '') {  // not yet logged in\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","export class Constants {\r\n    public static TIMEOUT: number = 60000;\r\n\r\n\tpublic static STORAGE_ITEM__CURRENT_USER: string = 'currentUser';\r\n\tpublic static STORAGE_ITEM__IDLING: string = 'ng2Idle.main.idling';\r\n\tpublic static STORAGE_ITEM__IDLING_EXPIRY: string = 'ng2Idle.main.expiry';\r\n\tpublic static STORAGE_ITEM__LAST_TIME: string = 'lastTime';\r\n\r\n    public static EXTERNAL_AUTH_URL: string = './auth/login';\r\n\r\n    public static STORAGE_ITEM__TOKEN: string = 'token';\r\n\tpublic static STORAGE_ITEM__TOKEN_CREATE_TIME: string = 'tokenCreateTime';\r\n\r\n\tpublic static API_BASE_HREF: string = './api/';\r\n\tpublic static API_ACCOUNT_LOGIN: string = Constants.API_BASE_HREF + 'accounts/account/login/';\r\n\r\n\tpublic static LANDING_PAGE: string = '/location-list';\r\n}","export * from './login.component';","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Constants } from '../../constants';\nimport { User } from '../../_model';\nimport { AuthenticationService } from '../../_services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  user: User = new User();\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.authenticationService.clearStorageData();\n  }\n\n  login(): void {\n    console.log(this.authenticationService.login(this.user.account, this.user.password));\n    this.router.navigate([Constants.LANDING_PAGE]);\n  }\n}\n","<br><br>\n\n<span class=\"ui-float-label\">\n    <input id=\"txt-account\" type=\"text\" pInputText [(ngModel)]=\"user.account\"> \n    <label for=\"txt-account\">Username</label>\n</span>\n\n<br><br>\n\n<span class=\"ui-float-label\">\n    <input id=\"txt-password\" type=\"password\" pPassword [(ngModel)]=\"user.password\"> \n    <label for=\"txt-password\">Password</label>\n</span>\n\n<br><br>\n\n<button id=\"btn-login\" type=\"button\" label=\"Login\" (click)=\"login()\" pButton></button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-asset-list',\n  templateUrl: './asset-list.component.html',\n  styleUrls: ['./asset-list.component.sass']\n})\nexport class AssetListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>asset-list works!</p>\n","export * from './asset-list.component';","export * from './location-list.component';","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ScannerComponent } from '../scanner';\n\n@Component({\n  selector: 'app-location-list',\n  templateUrl: './location-list.component.html',\n  styleUrls: ['./location-list.component.sass']\n})\nexport class LocationListComponent implements OnInit {\n\n  barcodeValue: string;\n\n  constructor(private readonly _dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  startScan() {\n    const data = {\n    };\n\n    this._dialog\n      .open(ScannerComponent, { data })\n      .afterClosed()\n      .subscribe(x => { if (x) { this.barcodeValue = x; } });\n  }\n}\n","<div>\n    <label>Assigned Location:</label>\n    <div>\n        <input type=\"text\" id=\"txt-assigned-location\" pInputText [(ngModel)]=\"barcodeValue\" />\n        <fa-icon icon=\"barcode\" style=\"font-size: 40px; margin-left: 5px; vertical-align: middle; cursor: pointer;\" (click)=\"startScan()\"></fa-icon>\n    </div>\n</div>\n","export * from './location.component';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.sass']\n})\nexport class LocationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>location works!</p>\n","export * from './scanner.component';","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\n\nconst PREVIOUS_SELECTED_CAMERA_LABEL: string = 'PREVIOUS_SELECTED_CAMERA_LABEL';\n\n@Component({\n  selector: 'app-scanner',\n  templateUrl: './scanner.component.html',\n  styleUrls: ['./scanner.component.sass']\n})\nexport class ScannerComponent implements OnInit {\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  delayShowCheckingMessage: boolean = true;\n  showScanner: boolean = false;\n  isFirstTime: boolean = true;\n\n  tryHarder: boolean = false;\n  hasDevices: boolean;\n  hasPermission: boolean;\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  formatsEnabled = [\n    BarcodeFormat.CODE_39,\n    BarcodeFormat.CODE_93,\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.EAN_8,\n    BarcodeFormat.PDF_417,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.QR_CODE\n  ];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) readonly data: any,\n    private readonly _dialogRef: MatDialogRef<ScannerComponent>\n  ) {\n    //let selectedCamera = localStorage.getItem(CAMERA);\n    //try {\n      // alert('selectedCamera');\n      // alert(selectedCamera);\n      // alert(JSON.parse(selectedCamera));\n      // let json = JSON.parse(selectedCamera);\n      // let camera: MediaDeviceInfo = plainToClass(AAA, JSON.parse(selectedCamera));\n      // alert(camera);\n      // this.currentDevice = camera;\n      //this.currentDevice = plainToClass(MediaDeviceInfo, JSON.parse(selectedCamera));\n      /*\n      let camera: MediaDeviceInfo = new MediaDeviceInfo();\n      camera.deviceId = json.deviceId;\n      camera.groupId = json.groupId;\n      camera.kind = json.kind;\n      camera.label = json.label;\n      this.currentDevice = camera;\n      */\n    //} catch {\n    //  alert('error');\n    //}\n    //alert('constructor');\n    //alert(this.currentDevice);\n  }\n\n  ngOnInit(): void {\n    setTimeout(()=>{\n      this.delayShowCheckingMessage = false;\n    }, 1000 * 2);\n  }\n\n  scanSuccess(value: string) {\n    this._dialogRef.close(value);\n  }\n\n  stopScan() {\n    this._dialogRef.close();\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onAutostarted() {\n    //alert('auto started');\n    this.isFirstTime = false;\n    this.currentDevice = this.scanner.device;\n    let previousSelectedCameraLabel: string = localStorage.getItem(PREVIOUS_SELECTED_CAMERA_LABEL);\n    let currentSelectedCameraLabel: string = this.currentDevice.label;\n\n    if (!previousSelectedCameraLabel) { // first time use scanner\n      localStorage.setItem(PREVIOUS_SELECTED_CAMERA_LABEL, currentSelectedCameraLabel);\n      this.showScanner = true;\n      //alert('1');\n    } else {  // not first time use scanner\n      if (previousSelectedCameraLabel !== currentSelectedCameraLabel) { // previous selected camera is not same as the current default camera, change it to previous selected camera\n        setTimeout(()=>{\n          this.currentDevice = this.availableDevices.find(device => device.label === previousSelectedCameraLabel);\n          this.showScanner = true;\n          //alert('2');\n        }, 1000 * 1);\n      } else {\n        this.showScanner = true;\n        //alert('3');\n      }\n    }\n  }\n\n  onDeviceChange() {\n    //alert('device change');\n    //alert(this.currentDevice.label);\n    if (!this.isFirstTime) {\n      localStorage.setItem(PREVIOUS_SELECTED_CAMERA_LABEL, this.currentDevice.label);\n      //alert(this.currentDevice.label);\n    }\n  }\n}\n","<div class=\"scanner-shell\" [hidden]=\"!hasDevices\">\n    <div style=\"position: absolute; left: 0; right: 0; top: 0; bottom: 0; background: white\">\n        <div [hidden]=\"showScanner\" style=\"position: absolute; top: 0; bottom: 0; left: 0; right: 0; background: white; z-index: 2000;\"></div>\n\n        <header style=\"position: absolute; top: 10px; right: 10px; z-index: 1500; background-color: white;\">\n            <p-dropdown [options]=\"availableDevices\" optionLabel=\"label\" [(ngModel)]=\"currentDevice\" style=\"vertical-align: top;\"></p-dropdown>\n            <button pButton type=\"button\" icon=\"pi pi-times\" class=\"ui-button-danger\"(click)=\"stopScan()\"></button>\n        </header>\n\n        <zxing-scanner\n            [tryHarder]=\"tryHarder\"\n            [formats]=\"formatsEnabled\"\n            [device]=\"currentDevice\"\n            (deviceChange)=\"onDeviceChange()\"\n            (autostarted)=\"onAutostarted()\"\n            (scanSuccess)=\"scanSuccess($event)\"\n            (permissionResponse)=\"onHasPermission($event)\"\n            (camerasFound)=\"onCamerasFound($event)\"\n            style=\"position: absolute; z-index: 1000;\">\n        </zxing-scanner>\n\n        <div [hidden]=\"!delayShowCheckingMessage\"\n            style=\"\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                -moz-transform: translateX(-50%) translateY(-50%);\n                -webkit-transform: translateX(-50%) translateY(-50%);\n                transform: translateX(-50%) translateY(-50%);\n                z-index: 500\">\n            Loading Camera...\n        </div>\n    </div>\n</div>\n\n<div [hidden]=\"delayShowCheckingMessage\">\n    <ng-container *ngIf=\"hasPermission === undefined\">\n        <h2>Waiting for camera permission.</h2>\n    </ng-container>\n\n    <ng-container *ngIf=\"hasPermission === false\">\n        <h2>You denied the camera permission, please grant the camera permission in order to use the scanner function.</h2>\n    </ng-container>\n\n    <ng-container *ngIf=\"hasDevices === undefined\">\n        <h2>Couldn't check for devices.</h2>\n    </ng-container>\n\n    <ng-container *ngIf=\"hasDevices === false\">\n        <h2>No camera was found.</h2>\n    </ng-container>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}